is my logic and syntax  code is currect for signal to call .delete() method to deleete the file from os directory ?: 



@receiver(pre_delete, sender=ProjectFlowAttachment)
def delete_attachments_project_flow_direct (sender, instance, **kwargs):
    instance.delete()



class ProjectFlowAttachment(models.Model):
    project_flow = models.ForeignKey(ProjectFlow, related_name='ProjectFlowAttachment_project_flow_related_ProjectFlow', on_delete=models.CASCADE, null=True, blank=True)
    file = models.FileField(upload_to='project_flow/ProjectFlowAttachment/', validators=[validate_file_or_image])
    file_name = models.CharField(max_length=255, editable=False, null=True, blank=True)
    created_data = models.DateTimeField(auto_now_add=True) 

    def save(self, *args, **kwargs):
        if self.file :
            self.file_name = basename(self.file.name)
        super().save(*args, **kwargs)

    def __str__(self):
        return f"{self.id}, {self.project_flow}" 

    def delete(self, *args, **kwargs):
        # Check if file exists before deleting
        if self.file:
            if os.path.isfile(self.file.path):
                os.remove(self.file.path)
        super().delete(*args, **kwargs)  # Call the parent class's delete method




