this is my serializer :

class CustomTokenObtainPairSerializer(TokenObtainPairSerializer):

    def validate(self, attrs):
        # Custom validation logic, for example, check if the user is active
        data = super().validate(attrs)
        user = get_user_model().objects.get(email=attrs['email'])
        
        if not user.is_active:
            raise serializers.ValidationError('User account is not active.')
        # Add any extra claims if necessary
        data['firstname'] = user.first_name  # or any other info you want to include in the token
        data['lastname'] = user.last_name  # or any other info you want to include in the token
        data['is_staff'] = user.is_staff  # or any other info you want to include in the token
        data['is_superuser'] = user.is_superuser  # or any other info you want to include in the token

        data['permissions'] = list(user.get_all_permissions()) 
        data['groups'] = list(user.groups.values('id', 'name'))

        data['PRF_image'] =  user.profile_prf_user_relaed_useraccount.PRF_image.url if user.profile_prf_user_relaed_useraccount.PRF_image else None

        return data


i wana pass my the request to serilizer , and recive the respone , this is my view :

class StaffCustomTokenObtainPairView(TokenObtainPairView):
    serializer_class = CustomTokenObtainPairSerializer

    def post(self, request, *args, **kwargs):
        response = super().post(request, *args, **kwargs)

        if response.status_code == 200:
            access_token = response.data.get('access')
            refresh_token = response.data.get('refresh')

            response.set_cookie(
                'access',
                access_token,
                max_age=AUTH_COOKIE_MAX_AGE,
                path=AUTH_COOKIE_PATH,
                secure=AUTH_COOKIE_SECURE,
                httponly=AUTH_COOKIE_HTTP_ONLY,
                samesite=AUTH_COOKIE_SAMESITE,

            )
            response.set_cookie(
                'refresh',
                refresh_token,
                max_age=AUTH_COOKIE_MAX_AGE,
                path=AUTH_COOKIE_PATH,
                secure=AUTH_COOKIE_SECURE,
                httponly=AUTH_COOKIE_HTTP_ONLY,
                samesite=AUTH_COOKIE_SAMESITE,

            )

        return response
