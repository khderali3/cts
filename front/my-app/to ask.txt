
here is my function :
import requests
def verify_recaptcha(captcha_response):
    secret_key = '6LeHkr4qAAAAABV3cqlK5rRDQrMj5mzJbWD'  # Replace with your secret key
    payload = {
        'secret': secret_key,
        'response': captcha_response
    }
    verify_url = 'https://www.google.com/recaptcha/api/siteverify'
    response = requests.post(verify_url, data=payload)
    result = response.json()

    return result.get("success", False)

in djoser default class to create user


class UserCreateSerializer(UserCreateMixin, serializers.ModelSerializer):
    password = serializers.CharField(style={"input_type": "password"}, write_only=True)
    recaptcha_value = serializers.CharField(write_only=True, required=True)  # Add a field for reCAPTCHA

    default_error_messages = {
        "cannot_create_user": settings.CONSTANTS.messages.CANNOT_CREATE_USER_ERROR
    }

    class Meta:
        model = User
        fields = tuple(User.REQUIRED_FIELDS) + (
            settings.LOGIN_FIELD,
            settings.USER_ID_FIELD,
            "password",
        )

    def validate(self, attrs):
        user = User(**attrs)
        password = attrs.get("password")

        print('this class is caleed the orginal')
        recaptcha_value = attrs.pop('recaptcha_value', None)
        print('recaptcha_value', recaptcha_value)

        if not verify_recaptcha(recaptcha_value):
            raise serializers.ValidationError({'recaptcha': 'Invalid reCAPTCHA. Please try again.'})




        try:
            validate_password(password, user)
        except django_exceptions.ValidationError as e:
            serializer_error = serializers.as_serializer_error(e)
            raise serializers.ValidationError(
                {"password": serializer_error[api_settings.NON_FIELD_ERRORS_KEY]}
            )

        return attrs



put the print is : recaptcha_value None


